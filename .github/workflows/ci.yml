name: ci

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  packages: write

jobs:

  tests:

    name: tests
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/andriykalashnykov/dlib-docker:v19.24.4@sha256:91ea2d6b8b86c52069db6a554442862897fb53ba7365f691500dc0f06fe4578f

    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Run ${{ matrix.name }} tests
        run: |
          go test --cover -parallel=1 -v -coverprofile=coverage.out -v ./...
          go tool cover -func=coverage.out | sort -rnk3

  release-docker-images:

    if: github.ref_type == 'tag'
    runs-on: ${{ matrix.runner }}
    needs: [ tests ]
    strategy:
      matrix:
        include:
#          - runner: ubuntu-latest
#            platforms: linux/arm/v7,linux/amd64
          - runner: macos-latest
            platforms: linux/arm64

    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Get Go version from go.mod
        run: |
          GO_VERSION=$(grep '^go ' go.mod | awk '{print $2}')
          echo "GO_VERSION=$GO_VERSION" >> $GITHUB_ENV

      - name: Set up QEMU
        if: matrix.runner == 'ubuntu-latest'
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3

      - name: Set up Docker Buildx
        if: matrix.runner == 'ubuntu-latest'
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Setup docker and docker-compose (missing on MacOS)
        if: matrix.runner == 'macos-latest'
        run: |
          brew install docker docker-compose

          # Link the Docker Compose v2 plugin so it's understood by the docker CLI
          mkdir -p ~/.docker/cli-plugins
          ln -sfn /usr/local/opt/docker-compose/bin/docker-compose ~/.docker/cli-plugins/docker-compose
          
          # Login to GitHub Container Registry
          echo "${{ secrets.GH_ACCESS_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Convert owner to lower case
        shell: bash
        run: |
          echo "OWNER_LC=$(echo ${OWNER} | tr '[:upper:]' '[:lower:]')" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: OWNER_LC
        run: "echo ${{ env.OWNER_LC }}"

      - name: Login to image repository
        if: matrix.runner == 'ubuntu-latest'
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: GitHub Tag Name
        run: |
          echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "Tag name from github.ref_name: ${{  github.ref_name }}"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5
        with:
          images: ghcr.io/${{ env.OWNER_LC }}/go-face
          flavor: latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern=v{{version}}
          labels: |
            org.opencontainers.image.vendor=Andriy Kalashnykov - andriykalashnykov@gmail.com
            org.opencontainers.image.title=Face recognition in Go with Dlib
            org.opencontainers.image.description=Face recognition in Go with Dlib
            org.opencontainers.image.licenses=CC0
            org.opencontainers.image.version=${{  github.ref_name }}"
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/AndriyKalashnykov/go-face/main/README.md
            io.artifacthub.package.maintainers=[{\"name\":\"Andriy Kalashnykov\",\"email\":\"andriykalashnykov@gmail.com\"}]
            io.artifacthub.package.license=CC0

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platforms }}
          build-args: |
            BUILDER_IMAGE=ghcr.io/andriykalashnykov/dlib-docker:v19.24.4
            GO_VER=${{ env.GO_VERSION }}
          push: ${{ github.ref_type == 'tag' }}
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output container image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
