name: ci

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  packages: write

jobs:

  tests:

    name: tests
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/andriykalashnykov/dlib-docker:v19.24.4@sha256:881ce58cf1eb2e5736af95983696103ee41ce2ddc8bae30775ccf61493687da2

    strategy:
      matrix:
        go-version: [ 1.23.2 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@f111f3307d8850f501ac008e886eec1fd1932a34 # v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Run ${{ matrix.name }} tests
        run: |
          go test --cover -parallel=1 -v -coverprofile=coverage.out -v ./...
          go tool cover -func=coverage.out | sort -rnk3

  release-docker-images:
    if: github.ref_type == 'tag'
    runs-on: ubuntu-latest
    needs: [ tests ]
    strategy:
      matrix:
        go-version: [ 1.23.2 ]

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a # v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3
      - name: Convert owner to lower case
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Login to image repository
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: GitHub Tag Name example
        run: |
          echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "Tag name from github.ref_name: ${{  github.ref_name }}"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5
        with:
          images: ghcr.io/${{ env.OWNER_LC }}/go-face
          flavor: latest=true
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=semver,pattern=v{{version}}
          labels: |
            org.opencontainers.image.vendor=Andriy Kalashnykov - andriykalashnykov@gmail.com
            org.opencontainers.image.title=Face recognition in Go with Dlib
            org.opencontainers.image.description=Face recognition in Go with Dlib
            org.opencontainers.image.licenses=CC0
            org.opencontainers.image.version=${{  github.ref_name }}"
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/AndriyKalashnykov/go-face/main/README.md
            io.artifacthub.package.maintainers=[{\"name\":\"Andriy Kalashnykov\",\"email\":\"andriykalashnykov@gmail.com\"}]
            io.artifacthub.package.license=CC0

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d # v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm/v7, linux/arm64, linux/amd64
          build-args: |
            BUILDER_IMAGE=ghcr.io/andriykalashnykov/dlib-docker:v19.24.4
            GO_VER=${{ matrix.go-version }}
          push: ${{ github.ref_type == 'tag' }}
          provenance: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output container image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
